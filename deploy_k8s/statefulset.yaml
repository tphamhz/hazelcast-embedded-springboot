apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-app
  labels:
    app: my-app
    app.kubernetes.io/instance: my-release-hazelcast
    role: hazelcast
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
      app.kubernetes.io/instance: my-release-hazelcast
      role: hazelcast
  template:
    metadata:
      labels:
        app: my-app
        app.kubernetes.io/instance: my-release-hazelcast
        role: hazelcast
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              "app.kubernetes.io/instance": my-release-hazelcast
      containers:
        - name: my-app-container
          image: tpham/hazelcast-embedded-kubernetes:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: hz-config-volume
              mountPath: /app/hazelcast.yaml
              subPath: hazelcast.yaml
            - name: hz-persistence-volume
              mountPath: /data/persistence
            - name: hz-certificates-volume
              mountPath: /data/secrets
          env:
            - name: JAVA_OPTIONS
              value: "-Dhazelcast.config=/app/hazelcast.yaml"
            - name: HZ_LICENSEKEY
              valueFrom:
                secretKeyRef:
                  name: hz-license-key
                  key: key
      volumes:
        - name: hz-config-volume
          configMap:
            name: hz-config
        - name: hz-certificates-volume
          secret:
            secretName: hz-certificates  # References the secret
  volumeClaimTemplates:
    - metadata:
        name: hz-persistence-volume
        labels:
          app.kubernetes.io/instance: my-release-hazelcast
      spec:
        accessModes: ["ReadWriteOnce"]
        #storageClassName: "<to-update>"
        resources:
          requests:
            storage: 1Gi #<to-update>
          
   
  